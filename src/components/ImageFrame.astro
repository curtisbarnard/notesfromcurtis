---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import '@fontsource/courier-prime';

interface Props {
  imagePath: string;
  altText: string;
  borderText: string;
}

const { imagePath, altText, borderText } = Astro.props;
// The below is for dynamically bring in a local image
const images = import.meta.glob<{ default: ImageMetadata }>('/src/images/*.{jpeg,jpg,png,gif}');
if (!images[imagePath])
  throw new Error(`"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);
---

<div class='imageContainer'>
  <div class='top'></div>
  <div class='left'></div>
  <Image src={images[imagePath]()} alt={altText} />
  <div class='right'></div>
  <div class='bottom'><span>{borderText}</span></div>
</div>

<style>
  .imageContainer {
    display: grid;
    grid-template-columns: 15px auto 15px;
    grid-template-rows: 15px auto 15px;
  }

  .top,
  .bottom {
    grid-column: span 3;
  }

  .top,
  .bottom,
  .left,
  .right {
    background-color: #0b0600;
    font-size: 0.8rem;
    letter-spacing: 0.1rem;
    font-family: 'Courier Prime', Courier, monospace;
    font-weight: 400;
    font-style: normal;
  }

  .bottom {
    display: grid;
    align-items: end;
    text-align: right;
    padding-right: 15px;
  }

  .bottom span {
    background-color: rgb(255, 238, 202);
    background-image: linear-gradient(
      90deg,
      rgb(255, 238, 202),
      rgb(255, 161, 61) 75%,
      rgb(255, 238, 202)
    );
    /* background-size: 50%; */
    -webkit-background-clip: text;
    -moz-background-clip: text;
    -webkit-text-fill-color: transparent;
    -moz-text-fill-color: transparent;
  }
</style>
